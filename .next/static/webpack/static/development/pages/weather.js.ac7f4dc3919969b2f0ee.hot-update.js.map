{"version":3,"file":"static/webpack/static/development/pages/weather.js.ac7f4dc3919969b2f0ee.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\nimport axios from 'axios';\n\nconst API_URL = \"https://api.apixu.com/v1/forecast.json?days=7&key=b2ad22b693a945919ab120150161310\"\n\nconst initialState = {\n  celciusChecked: true,\n  location: {\n    name: \"\",\n    lat: 0,\n    lon: 0,\n  },\n  current: {\n    temp_c: 0,\n    temp_f: 0,\n    condition: {\n      text: \"\",\n      code: 0\n    }\n  },\n  forecast: {\n    forecastday: []\n  }\n}\n\nexport const actionTypes = {\n  GET_FORECAST: 'GET_FORECAST',\n  FETCH_FORECAST_SUCCESS: 'GET_FORECAST_SUCCESS',\n  FETCH_FORECAST_REQUEST: 'FETCH_FORECAST_REQUEST',\n  SWITCH_TEMP: 'SWITCH_TEMP',\n}\n\n// REDUCERS\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_FORECAST:\n      return Object.assign({}, state, {\n        location: action.location,\n        current: action.current,\n        forecast: action.forecast\n      })\n    case actionTypes.SWITCH_TEMP:\n      return Object.assign({}, state, {\n        celciusChecked: action.celciusChecked\n      })\n    default: return state\n  }\n}\n\n// ACTIONS\nconst fetchForecastRequest = () => {\n  return {\n    type: actionTypes.FETCH_FORECAST_REQUEST\n  }\n}\n\nconst fetchForecastSuccess = data => {\n  return {\n    type: actionTypes.FETCH_FORECAST_SUCCESS,\n    location: data.location,\n    current: data.current,\n    forecast: data.forecast\n  }\n}\nexport const getForecast = (query) => dispatch => {\n  dispatch(fetchForecastRequest())\n  return axios.get(`${API_URL}&q=${query}`)\n    .then(({data}) => {\n      return dispatch(fetchForecastSuccess(data))\n    })\n}\n\nexport const switchTemp = (checked) => dispatch => {\n  return dispatch({\n    type: actionTypes.SWITCH_TEMP,\n    celciusChecked: checked\n  })\n}\n\nexport function initializeStore (initialState = initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AADA;AAfA;AAoBA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAAA;AACA;AACA;;;;A","sourceRoot":""}